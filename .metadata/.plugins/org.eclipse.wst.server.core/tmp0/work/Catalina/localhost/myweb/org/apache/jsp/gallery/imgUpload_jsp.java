/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-18 11:09:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.gallery;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class imgUpload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1740636672021L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1741922526678L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/myweb/css/mainLayout.css\">\r\n");
      out.write("<script>\r\n");
      out.write("	function show(imgcomp) {\r\n");
      out.write("		var filename = imgcomp.value;\r\n");
      out.write("		filename = filename.substring(filename.length - 3);\r\n");
      out.write("		if (filename != 'jpg') {\r\n");
      out.write("			alert('jpg이미지만 업로드 가능합니다.');\r\n");
      out.write("			imgcomp.value = '';\r\n");
      out.write("		}\r\n");
      out.write("		//alert(filename);\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      com.yong.member.MemberDAO mdao = null;
      mdao = (com.yong.member.MemberDAO) _jspx_page_context.getAttribute("mdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (mdao == null){
        mdao = new com.yong.member.MemberDAO();
        _jspx_page_context.setAttribute("mdao", mdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("<!-- 상단으로 구분 -->\r\n");
      out.write("<script>\r\n");
      out.write("	function openLogin() {\r\n");
      out.write("		window.open('/myweb/member/login.jsp', 'login',\r\n");
      out.write("						'width=450 ,height=350');\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");

String sname = (String) session.getAttribute("sname");

      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	");

	if (sname == null) {
	
      out.write("\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"javascript:openLogin()\">로그인</a>| <a href=\"/myweb/member/memberJoin.jsp\">회원가입</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	");

	} else {
	
      out.write("\r\n");
      out.write("	<div>");
      out.print(sname);
      out.write("님 로그인중... |  <a href=\"/myweb/member/logout.jsp\">로그아웃</a></div>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<h1>JSP Study Site</h1>\r\n");
      out.write("	<!-- 메뉴 영역으로 구분 -->\r\n");
      out.write("	<nav>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><a href=\"/myweb/index.jsp\">Home</a></li>\r\n");
      out.write("			<li><a href=\"/myweb/profile.jsp\">Profile</a></li>\r\n");
      out.write("			<li><a href=\"#\">자유게시판</a></li>\r\n");
      out.write("			<li><a href=\"#\">파일업로드</a></li>\r\n");
      out.write("			<li><a href=\"#\">방명록</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<hr>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("		<article>\r\n");
      out.write("			<h2>이미지 업로드</h2>\r\n");
      out.write("			<form name=\"imgUpload\" action=\"imgUpload_ok.jsp\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("				<fieldset>\r\n");
      out.write("					<legend>이미지 업로드</legend>\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li><label>이미지</label><input type=\"file\" name=\"imgname\" onchange=\"show(this)\"></li>\r\n");
      out.write("						<!-- accept=\".jpg\" 파일 선택할 수 있도록 제한해주는 태그-->\r\n");
      out.write("					</ul>\r\n");
      out.write("					<div>\r\n");
      out.write("						<input type=\"submit\" value=\"업로드\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</fieldset>\r\n");
      out.write("			</form>\r\n");
      out.write("		</article>\r\n");
      out.write("	</section>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!-- 하단으로 구분 -->\r\n");
      out.write("<footer>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<div>Copyright &copy; SsangYong Corp. All Rights Reserved.</div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
